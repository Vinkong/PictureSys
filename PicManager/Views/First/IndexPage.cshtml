
@{
    Layout = "~/Views/Shared/_MyLayoutPage.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UserLoginPage</title>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/js/tree.js"></script>
    <script type="text/javascript">
        function randomRange(t, i) { return Math.random() * (i - t) + t } Particle3D = function (t) { THREE.Particle.call(this, t), this.velocity = new THREE.Vector3(0, -2, 0), this.velocity.rotateX(randomRange(-45, 45)), this.velocity.rotateY(randomRange(0, 360)), this.gravity = new THREE.Vector3(0, 0, 0), this.drag = 1 }, Particle3D.prototype = new THREE.Particle, Particle3D.prototype.constructor = Particle3D, Particle3D.prototype.updatePhysics = function () { this.velocity.multiplyScalar(this.drag), this.velocity.addSelf(this.gravity), this.position.addSelf(this.velocity) }; var TO_RADIANS = Math.PI / 180; THREE.Vector3.prototype.rotateY = function (t) { cosRY = Math.cos(t * TO_RADIANS), sinRY = Math.sin(t * TO_RADIANS); var i = this.z, o = this.x; this.x = o * cosRY + i * sinRY, this.z = o * -sinRY + i * cosRY }, THREE.Vector3.prototype.rotateX = function (t) { cosRY = Math.cos(t * TO_RADIANS), sinRY = Math.sin(t * TO_RADIANS); var i = this.z, o = this.y; this.y = o * cosRY + i * sinRY, this.z = o * -sinRY + i * cosRY }, THREE.Vector3.prototype.rotateZ = function (t) { cosRY = Math.cos(t * TO_RADIANS), sinRY = Math.sin(t * TO_RADIANS); var i = this.x, o = this.y; this.y = o * cosRY + i * sinRY, this.x = o * -sinRY + i * cosRY };
        $(function () {
            var container = document.querySelector(".snow-container"); if (/MSIE 6|MSIE 7|MSIE 8/.test(navigator.userAgent)) { return } else { if (/MSIE 9|MSIE 10/.test(navigator.userAgent)) { $(container).css("height", $(window).height()).bind("click", function () { $(this).fadeOut(1000, function () { $(this).remove() }) }) } } var containerWidth = $(container).width(); var containerHeight = $(container).height(); var particle; var camera; var scene; var renderer; var mouseX = 0; var mouseY = 0; var windowHalfX = window.innerWidth / 2; var windowHalfY = window.innerHeight / 2; var particles = []; var particleImage = new Image(); particleImage.src = "../../img/o_200103034919snow.png";
            var snowNum = 500; function init() { camera = new THREE.PerspectiveCamera(75, containerWidth / containerHeight, 1, 10000); camera.position.z = 1000; scene = new THREE.Scene(); scene.add(camera); renderer = new THREE.CanvasRenderer(); renderer.setSize(containerWidth, containerHeight); var material = new THREE.ParticleBasicMaterial({ map: new THREE.Texture(particleImage) }); for (var i = 0; i < snowNum; i++) { particle = new Particle3D(material); particle.position.x = Math.random() * 2000 - 1000; particle.position.y = Math.random() * 2000 - 1000; particle.position.z = Math.random() * 2000 - 1000; particle.scale.x = particle.scale.y = 1; scene.add(particle); particles.push(particle) } container.appendChild(renderer.domElement); document.addEventListener("mousemove", onDocumentMouseMove, false); document.addEventListener("touchstart", onDocumentTouchStart, false); document.addEventListener("touchmove", onDocumentTouchMove, false); setInterval(loop, 1000 / 40) } function onDocumentMouseMove(event) { mouseX = event.clientX - windowHalfX; mouseY = event.clientY - windowHalfY } function onDocumentTouchStart(event) { if (event.touches.length == 1) { event.preventDefault(); mouseX = event.touches[0].pageX - windowHalfX; mouseY = event.touches[0].pageY - windowHalfY } } function onDocumentTouchMove(event) { if (event.touches.length == 1) { event.preventDefault(); mouseX = event.touches[0].pageX - windowHalfX; mouseY = event.touches[0].pageY - windowHalfY } } function loop() { for (var i = 0; i < particles.length; i++) { var particle = particles[i]; particle.updatePhysics(); with (particle.position) { if (y < -1000) { y += 2000 } if (x > 1000) { x -= 2000 } else { if (x < -1000) { x += 2000 } } if (z > 1000) { z -= 2000 } else { if (z < -1000) { z += 2000 } } } } camera.position.x += (mouseX - camera.position.x) * 0.005; camera.position.y += (-mouseY - camera.position.y) * 0.005; camera.lookAt(scene.position); renderer.render(scene, camera) } init()
        });
        (function (window, document, undefined) {
            var hearts = [];
            window.requestAnimationFrame = (function () {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimationFrame ||
                    function (callback) {
                        setTimeout(callback, 1000 / 60);
                    }
            })();
            init();
            function init() {
                css(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;}.heart:after{top: -5px;}.heart:before{left: -5px;}");
                attachEvent();
                gameloop();
            }
            function gameloop() {
                for (var i = 0; i < hearts.length; i++) {
                    if (hearts[i].alpha <= 0) {
                        document.body.removeChild(hearts[i].el);
                        hearts.splice(i, 1);
                        continue;
                    }
                    hearts[i].y--;
                    hearts[i].scale += 0.004;
                    hearts[i].alpha -= 0.013;
                    hearts[i].el.style.cssText = "left:" + hearts[i].x + "px;top:" + hearts[i].y + "px;opacity:" + hearts[i].alpha + ";transform:scale(" + hearts[i].scale + "," + hearts[i].scale + ") rotate(45deg);background:" + hearts[i].color;
                }
                requestAnimationFrame(gameloop);
            }
            function attachEvent() {
                var old = typeof window.onclick === "function" && window.onclick;
                window.onclick = function (event) {
                    old && old();
                    createHeart(event);
                }
            }
            function createHeart(event) {
                var d = document.createElement("div");
                d.className = "heart";
                hearts.push({
                    el: d,
                    x: event.clientX - 5,
                    y: event.clientY - 5,
                    scale: 1,
                    alpha: 1,
                    color: randomColor()
                });
                document.body.appendChild(d);
            }
            function css(css) {
                var style = document.createElement("style");
                style.type = "text/css";
                try {
                    style.appendChild(document.createTextNode(css));
                } catch (ex) {
                    style.styleSheet.cssText = css;
                }
                document.getElementsByTagName('head')[0].appendChild(style);
            }
            function randomColor() {
                return "rgb(" + (~~(Math.random() * 255)) + "," + (~~(Math.random() * 255)) + "," + (~~(Math.random() * 255)) + ")";
            }
        })(window, document);
    </script>
    <style>
        body {
            opacity: 0.7;
            background: url('../../img/nihao.jpg')fixed !important;
            background-size: 100% !important;
        }

        .snow-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 100001;
        }
    </style>

</head>
<body>
    <article class="htmleaf-container">

        <div class="snow-container"></div>
    </article>
    <div class="container" style="margin-top:100px;">
        <a style="color:#fff; font-size:24px;"> @Session["UserName"] →欢迎您来到Picture的世界！</a><br />
        <a style="color:#fff; display:block; font-size:16px; margin-left:30px; margin-top:30px;font-weight:bold">以前总以为，人生最美好的是相遇。后来才明白，其实难得的是重逢。如果说相遇是久别重逢，希望我们别来无恙。</a>
    </div>
    <div style="background-color:#fff;margin:0 auto; height:50px;width:100px; text-align:center;margin-top:10px;line-height:50px">
        <a href="/Login/UserLoginPage" style="color:red; font-weight:bold; cursor:pointer;">进入相册→</a>
    </div>
</body>
</html>
